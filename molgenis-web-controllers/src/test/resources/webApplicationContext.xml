<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jee="http://www.springframework.org/schema/jee"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-3.0.xsd
http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd">

	<context:annotation-config />
	<tx:annotation-driven />

	<!-- helper beans -->
	<bean
		class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />
	<bean
		class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor" />
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver" />

	<!-- pick up transaction manager from jetty/jndi -->
	<bean id="jtaTransactionManager" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="resourceRef" value="true" />
		<property name="jndiName" value="javax.transaction.TransactionManager" />
		<property name="expectedType" value="javax.transaction.TransactionManager" />
	</bean>

	<!-- pick up user transaction from jetty/jndi -->
	<bean id="userTransaction" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="resourceRef" value="true" />
		<property name="jndiName" value="UserTransaction" />
		<property name="expectedType" value="javax.transaction.UserTransaction" />
	</bean>

	<!-- pick up dataSource from jetty/jndi -->
	<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName" value="jdbc/molgenis" />
		<property name="resourceRef" value="true" />
		<property name="expectedType" value="javax.sql.DataSource" />
	</bean>

	<!-- Transaction management -->
	<bean id="transactionManager"
		class="org.springframework.transaction.jta.JtaTransactionManager">
		<property name="transactionManager" ref="jtaTransactionManager" />
		<property name="userTransaction" ref="userTransaction" />
	</bean>

	<!-- weave in the transaction manager -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- entity manager factory -->
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="persistenceUnitName" value="molgenis" />
		<property name="dataSource" ref="dataSource" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="showSql" value="true" />
			</bean>
		</property>
		<property name="jpaPropertyMap">
			<map>
				<entry key="javax.persistence.transactionType" value="JTA" />
				<entry key="hibernate.transaction.jta.platform"
					value="org.hibernate.service.jta.platform.internal.BitronixJtaPlatform" />
			</map>
		</property>
	</bean>

	<!-- content solving -->
	<bean
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="mediaTypes">
			<map>
				<entry key="atom" value="application/atom+xml" />
				<entry key="html" value="text/html" />
				<entry key="json" value="application/json" />
			</map>
		</property>
		<property name="viewResolvers">
			<list>
				<bean class="org.springframework.web.servlet.view.BeanNameViewResolver" />
				<bean
					class="org.springframework.web.servlet.view.InternalResourceViewResolver">
					<property name="prefix" value="/WEB-INF/jsp/" />
					<property name="suffix" value=".jsp" />
				</bean>
			</list>
		</property>
		<property name="defaultViews">
			<list>
				<bean
					class="org.springframework.web.servlet.view.json.MappingJacksonJsonView" />
			</list>
		</property>
	</bean>


</beans>