<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jee="http://www.springframework.org/schema/jee"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-3.0.xsd
http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd">

	<!-- helper beans -->
	<bean
		class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />
	<bean
		class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor" />
	<!--<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver" 
		/> -->
	<!-- components -->
	<context:component-scan base-package="org.molgenis.backend.jpa" />

	<!--<context:component-scan base-package="org.molgenis.controllers" /> -->


	<!-- entitymanager etc -->

	<bean id="dataSource" class="bitronix.tm.resource.jdbc.PoolingDataSource"
		init-method="init" destroy-method="close">
		<property name="className"
			value="com.mysql.jdbc.jdbc2.optional.MysqlXADataSource" />
		<property name="uniqueName" value="molgenis" />
		<property name="allowLocalTransactions" value="true" />
		<property name="maxPoolSize" value="3" />
		<property name="driverProperties">
			<props>
				<prop key="databaseName">molgenis_mvc</prop>
				<prop key="user">molgenis</prop>
				<prop key="password">molgenis</prop>
				<prop key="url">jdbc:mysql://localhost/molgenis_mvc?innodb_autoinc_lock_mode=2
				</prop>
			</props>
		</property>
	</bean>

	<!-- create BTM transaction manager -->
	<bean id="BitronixTransactionManager" factory-method="getTransactionManager"
		class="bitronix.tm.TransactionManagerServices" destroy-method="shutdown" />

	<!-- Spring JtaTransactionManager -->
	<bean id="JtaTransactionManager"
		class="org.springframework.transaction.jta.JtaTransactionManager">
		<property name="transactionManager" ref="BitronixTransactionManager" />
		<property name="userTransaction" ref="BitronixTransactionManager" />
	</bean>

	<!-- entity manager factory -->
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="persistenceUnitName" value="molgenis" />
		<property name="dataSource" ref="dataSource" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="showSql" value="true" />
			</bean>
		</property>
		<property name="jpaPropertyMap">
			<map>
				<entry key="javax.persistence.transactionType" value="JTA" />
				<entry key="hibernate.transaction.jta.platform"
					value="org.hibernate.service.jta.platform.internal.BitronixJtaPlatform" />
				<!-- <entry key="hibernate.current_session_context_class" value="thread" 
					/> -->
			</map>
		</property>
	</bean>

	<context:annotation-config />
	<tx:annotation-driven />

</beans>