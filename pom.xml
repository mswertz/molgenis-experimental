<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.sonatype.oss</groupId>
		<artifactId>oss-parent</artifactId>
		<version>7</version>
	</parent>
	<groupId>org.molgenis</groupId>
	<artifactId>molgenis</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>

	<!-- More Project Information -->
	<name>Molgenis</name>
	<description>
  		MOLGENIS is an collaborative open source project on a mission to generate great software infrastructure for life science research
  	</description>
	<url>http://www.molgenis.org</url>
	<licenses>
		<license>
			<name>GNU Library or Lesser General Public License (LGPL)</name>
		</license>
	</licenses>
	<scm>
		<connection>scm:git:git://github.com/molgenis/molgenis.git</connection>
		<url>https://github.com/molgenis/molgenis</url>
	</scm>
	<developers></developers>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<build>
		<!-- include *.ftl in src folder -->
		<resources>
			<resource>
				<directory>src/main/java</directory>
				<includes>
					<include>**/*.ftl</include>
				</includes>
			</resource>
			<resource>
				<directory>${project.basedir}/src/main/resources</directory>
				<excludes>
					<exclude>**molgenis.properties</exclude>
					<exclude>**git.properties</exclude>
				</excludes>
			</resource>
		</resources>
		<pluginManagement>
			<plugins>
				<!-- use java 1.6 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.0</version>
					<configuration>
						<source>1.6</source>
						<target>1.6</target>
						<compilerArguments>
							<Xlint />
						</compilerArguments>
					</configuration>
				</plugin>
				<!-- use war 2.3 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>2.3</version>
				</plugin>
				<!-- use jar 2.4 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>2.4</version>

					<configuration>
						<archive>
							<manifest>
								<mainClass>test.App</mainClass>
								<addDefaultImplementationEntries>
									true
								</addDefaultImplementationEntries>
							</manifest>
						</archive>
					</configuration>

				</plugin>

				<!-- enable jetty -->
				<plugin>
					<groupId>org.mortbay.jetty</groupId>
					<artifactId>jetty-maven-plugin</artifactId>
					<version>8.1.8.v20121106</version>
					<configuration>
						<scanIntervalSeconds>3</scanIntervalSeconds>
						<stopPort>9999</stopPort>
						<stopKey>jetty-stop</stopKey>
						<!-- include test sources -->
						<useTestScope>true</useTestScope>
						<webAppConfig>
							<contextPath>/</contextPath>
							<baseResource
								implementation="org.eclipse.jetty.util.resource.ResourceCollection">
								<resourcesAsCSV>src/main/webapp</resourcesAsCSV>
							</baseResource>
						</webAppConfig>
					</configuration>
				</plugin>

				<!-- Eclipse m2e mappings -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-antrun-plugin</artifactId>
										<versionRange>[1.7,)</versionRange>
										<goals>
											<goal>run</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>

		</pluginManagement>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.6</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>2.2.1</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<phase>verify</phase>
						<goals>
							<goal>jar-no-fork</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- generate test sources -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.7</version>
				<executions>
					<execution>
						<phase>generate-test-sources</phase>
						<configuration>
							<tasks>
								<!-- to link in javac -->
								<property name="build.compiler" value="extJavac" />
								<taskdef resource="net/sf/antcontrib/antcontrib.properties"
									classpathref="maven.plugin.classpath" />
								<if>
									<!-- only run if the package contains a test model directory -->
									<available file="${basedir}/src/test/resources/org/molgenis/model"
										type="dir" />
									<then>
										<echo message="GENERATE-DIR ${basedir}" />

										<!-- delete previously generated -->
										<delete dir="${basedir}/target/generated-sources/test/java" />
										<mkdir dir="${basedir}/target/generated-sources/test/java" />

										<path id="generate-classpath">
											<path refid="maven.runtime.classpath" />
											<path refid="maven.compile.classpath" />
											<path refid="maven.test.classpath" />
											<pathelement path="${basedir}/target/test-classes" />
										</path>
										<mkdir dir="${basedir}/target/test-classes" />
										<java classname="org.molgenis.GenerateTestSources"
											classpathref="generate-classpath" failonerror="true" dir="${basedir}"
											fork="true">
										</java>
										<if>
											<available file="${basedir}/src/test/java" type="dir" />
											<then>
												<javac
													srcdir="${basedir}/src/test/java:${basedir}/src/test/resources"
													destdir="${basedir}/target/test-classes" classpathref="generate-classpath">
												</javac>
											</then>
										</if>
									</then>
								</if>
							</tasks>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
				<dependencies>
					<!-- ant lib tasks for 'if' generator -->
					<dependency>
						<groupId>ant-contrib</groupId>
						<artifactId>ant-contrib</artifactId>
						<version>1.0b3</version>
						<exclusions>
							<exclusion>
								<groupId>ant</groupId>
								<artifactId>ant</artifactId>
							</exclusion>
						</exclusions>
					</dependency>
					<dependency>
						<groupId>org.apache.ant</groupId>
						<artifactId>ant-nodeps</artifactId>
						<version>1.8.1</version>
					</dependency>
				</dependencies>
			</plugin>

			<!-- add generated test sources -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.7</version>
				<executions>
					<execution>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>add-test-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>target/generated-sources/test/java</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>

	<reporting>
		<plugins>
			<!-- code coverage -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>2.5.2</version>
				<configuration>
					<aggregate>true</aggregate>
					<formats>
						<format>html</format>
						<format>xml</format>
					</formats>
				</configuration>
			</plugin>
			<!-- code analysis -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<version>2.5.2</version>
				<configuration>
					<xmlOutput>true</xmlOutput>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<!-- improve report generation performance -->
					<dependencyLocationsEnabled>false</dependencyLocationsEnabled>
				</configuration>
			</plugin>
		</plugins>
	</reporting>

	<dependencies>
		<!-- scope: compile -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.7.2</version>
			<scope>compile</scope>
		</dependency>
		<!-- scope: test -->
		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<version>6.8</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>1.9.5</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>3.2.1.RELEASE</version>
			<scope>test</scope>
		</dependency>
		<!-- scope: provided -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.0.1</version>
			<scope>provided</scope>
		</dependency>
	</dependencies>

	<modules>
		<module>molgenis-core</module>
		<module>molgenis-data</module>
		<module>molgenis-data-jpa</module>
		<module>molgenis-data-csv</module>
		<module>molgenis-web-view</module>
		<module>molgenis-web-controllers</module>
		<!-- experimental sping data jpa -->
		<module>molgenis-data-sdj</module>
	</modules>
</project>